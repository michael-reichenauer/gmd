name: Build and release

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  build_test_release_job:
    runs-on: ubuntu-latest
    name: Build, Test and Release Job

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'

      - name: Build & Test
        id: build
        run: |
          echo Build on branch: ${{ github.ref }}
          ./build
          echo "version=$(./gmd_linux --version)" >> $GITHUB_OUTPUT
          echo Version: $(./gmd_linux --version)

      - name: Check if release branch
        id: check-branch
        if: github.ref == 'refs/heads/main'
        run: |
          echo Branch ${{ github.ref }}
          echo "isRelease=true" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        if: steps.check-branch.outputs.isRelease == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.build.outputs.version }}
          release_name: Version ${{ steps.build.outputs.version }}
          draft: false
          prerelease: true
          body: ${{ github.event.head_commit.message }}

      - name: Upload Linux artifact
        if: steps.check-branch.outputs.isRelease == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gmd_linux
          asset_name: gmd_linux
          asset_content_type: application/octet-stream

      - name: Upload Windows artifact
        if: steps.check-branch.outputs.isRelease == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gmd_windows
          asset_name: gmd_windows
          asset_content_type: application/octet-stream

      - name: Upload OSX/Mac artifact
        if: steps.check-branch.outputs.isRelease == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gmd_osx
          asset_name: gmd_osx
          asset_content_type: application/octet-stream

      # - name: Upload Windows setup file
      #   if: steps.check-branch.outputs.isRelease == 'true'
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./installation/installer/gmdSetup.exe
      #     asset_name: gmdSetup.exe
      #     asset_content_type: application/octet-stream

      # - name: Upload Windows artifact (gmd.exe zipped)
      #   if: steps.check-branch.outputs.isRelease == 'true'
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./gmd.zip
      #     asset_name: gmd.zip
      #     asset_content_type: application/octet-stream

      # - name: Upload Windows artifact (old name)
      #   if: steps.check-branch.outputs.isRelease == 'true'
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./gmd_windows
      #     asset_name: gmd.exe
      #     asset_content_type: application/octet-stream
