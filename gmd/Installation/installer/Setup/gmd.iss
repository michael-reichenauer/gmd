; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!


#ifndef AppVersion
	#define AppVersion = "0.0"
#endif

#ifndef ProductVersion
	#define ProductVersion = "0.0.0.0"
#endif


#define AppName "gmd"
#define AppPublisher "Michael Reichenauer"
#define AppURL "https://github.com/michael-reichenauer/gmd"
#define AppExeName "gmd.exe"
#define InstallerId "38e32b582aeb4a1e89534ec68bb60ce0" ; Must be unique for every app installer

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
AppId={#InstallerId}
PrivilegesRequired=lowest
AppName={#AppName}
AppVersion={#AppVersion}
AppVerName={#AppName} {#AppVersion}
AppPublisher={#AppPublisher}
AppPublisherURL={#AppURL}
AppSupportURL={#AppURL}
AppUpdatesURL={#AppURL}
AppCopyright= {#AppPublisher}
DefaultDirName={commonappdata}\{#AppName}
DisableDirPage=yes
DisableProgramGroupPage=yes
OutputDir=..
OutputBaseFilename=gmdSetup
VersionInfoVersion={#ProductVersion}
Compression=lzma
SolidCompression=yes
AllowCancelDuringInstall=false
DisableWelcomePage=False
WizardImageFile=WizModernImage-IS.bmp
WizardSmallImageFile=WizModernSmallImage-IS.bmp
RestartIfNeededByRun=False
MinVersion=0,6.1
UsePreviousGroup=False
UsePreviousAppDir= False
AppendDefaultGroupName=False
DisableReadyMemo=True

[Files]
; Copy all release output files to version folder
; Source: "..\..\..\..\gmd.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{tmp}\gmd.exe"; DestDir: "{app}"; Flags: external ignoreversion


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Dirs]
Name: {commonappdata}\{#AppName}; Permissions: users-modify; Flags: uninsalwaysuninstall

[Icons]
Name: "{userstartmenu}\{#AppName}"; Filename: "{app}\{#AppExeName}"     
Name: "{commondesktop}\{#AppName}"; Filename: "{app}\{#AppExeName}"

[Run]
; Run install helper tasks 
Filename: "{app}\{#AppExeName}"; Parameters: "--update"; Flags: runhidden runminimized

; Start program (unless silent or unchecked)
Filename: "{app}\{#AppExeName}"; Flags: nowait postinstall skipifsilent; Description: "{cm:LaunchProgram,{#StringChange(AppName, '&', '&&')}}"

[UninstallRun]
; Delete update and renew tasks (regardless of version)
; Filename: "{app}\{#AppExeName}"; Parameters: "-uninstall"; Flags: runhidden runminimized;

[UninstallDelete]
; Delete application program files and program data folders
Type: filesandordirs; Name: "{app}"
Type: filesandordirs; Name: "{commonappdata}\{#AppName}"


[Code]
var
  DownloadPage: TDownloadWizardPage;
  
function OnDownloadProgress(const Url, FileName: String; const Progress, ProgressMax: Int64): Boolean;
begin
  if Progress = ProgressMax then
    Log(Format('Successfully downloaded file to {tmp}: %s', [FileName]));
  Result := True;
end;

procedure InitializeWizard;
begin
  DownloadPage := CreateDownloadPage(SetupMessage(msgWizardPreparing), SetupMessage(msgPreparingDesc), @OnDownloadProgress);
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if CurPageID = wpReady then begin
    DownloadPage.Clear;
    DownloadPage.Add('https://github.com/michael-reichenauer/gmd/releases/latest/download/gmd_windows', 'gmd.exe', '');
   
    DownloadPage.Show;
    try
      try
        DownloadPage.Download; // This downloads the files to {tmp}
        Result := True;
      except
        if DownloadPage.AbortedByUser then
          Log('Aborted by user.')
        else
          SuppressibleMsgBox(AddPeriod(GetExceptionMessage), mbCriticalError, MB_OK, IDOK);
        Result := False;
      end;
    finally
      DownloadPage.Hide;
    end;
  end else
    Result := True;
end;

